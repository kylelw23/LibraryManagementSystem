
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author user
 */
public class AdminGUI extends javax.swing.JFrame {

    /**
     * Creates new form AdminGUI
     */
    public AdminGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        staffSearchBtn = new javax.swing.JButton();
        CreateStudentBtn = new javax.swing.JButton();
        logOut = new javax.swing.JButton();
        CreateLibrarianBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        studentPasswordTF = new javax.swing.JTextField();
        studentIDTF = new javax.swing.JTextField();
        createBtn1 = new javax.swing.JButton();
        searchBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        UpdateContent = new javax.swing.JButton();
        librarianPasswordTF = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        createBtn2 = new javax.swing.JButton();
        staffIDTF = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        deleteStudentAccount = new javax.swing.JButton();
        deleteLibrarianAccount = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        staffSearchBtn.setText("Search information");
        staffSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffSearchBtnActionPerformed(evt);
            }
        });

        CreateStudentBtn.setText("Create Student Account");
        CreateStudentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateStudentBtnActionPerformed(evt);
            }
        });

        logOut.setText("Log out");
        logOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutActionPerformed(evt);
            }
        });

        CreateLibrarianBtn.setText("Create Librarian Account");
        CreateLibrarianBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateLibrarianBtnActionPerformed(evt);
            }
        });

        jLabel4.setText("Please add a new password for this student:");

        jLabel2.setText("Please input student ID:");

        createBtn1.setText("Create");
        createBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBtn1ActionPerformed(evt);
            }
        });

        searchBtn.setText("Search information");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        jLabel5.setText("Please add a new password for this librarian:");

        UpdateContent.setText("Update new information");
        UpdateContent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateContentActionPerformed(evt);
            }
        });

        jLabel3.setText("Please input staff ID:");

        createBtn2.setText("Create");
        createBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBtn2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("IMPORTANT, press this button before exit!");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTable2);

        deleteStudentAccount.setText("Delete this student account");
        deleteStudentAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteStudentAccountActionPerformed(evt);
            }
        });

        deleteLibrarianAccount.setText("Delete this librarian account");
        deleteLibrarianAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteLibrarianAccountActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setText("Admin home screen");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(studentIDTF, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(searchBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(studentPasswordTF, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(32, 32, 32)
                                .addComponent(staffIDTF, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(createBtn1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(staffSearchBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(librarianPasswordTF, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addComponent(createBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CreateStudentBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deleteStudentAccount))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(logOut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CreateLibrarianBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(deleteLibrarianAccount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(UpdateContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(122, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(36, 36, 36))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(327, Short.MAX_VALUE)
                    .addComponent(jLabel6)
                    .addGap(259, 259, 259)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(studentIDTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(studentPasswordTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createBtn1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteStudentAccount)
                    .addComponent(CreateStudentBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staffIDTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(staffSearchBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createBtn2)
                    .addComponent(librarianPasswordTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CreateLibrarianBtn)
                    .addComponent(deleteLibrarianAccount))
                .addGap(7, 7, 7)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(logOut)
                    .addComponent(UpdateContent))
                .addGap(20, 20, 20))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(32, 32, 32)
                    .addComponent(jLabel6)
                    .addContainerGap(473, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void staffSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffSearchBtnActionPerformed
        String filePath = "D:/LibraryManagementSystem/librarianAccounts";
        File file = new File(filePath);

        String librarianID= staffIDTF.getText();
        // Sorting the contents in the table
        // Removing the previous row
        try{
            int getElement =0;

            DefaultTableModel modelElement = (DefaultTableModel)jTable2.getModel();
            getElement = jTable2.getSelectedRow();
            modelElement.removeRow(getElement);
        }catch(Exception io){

        }
        //Adding the input row
        try {
            BufferedReader buffReader = new BufferedReader(new FileReader(filePath));
            String firstLine = buffReader.readLine().trim();
            String[] columnsName = firstLine.split(",");
            DefaultTableModel model = (DefaultTableModel)jTable2.getModel();
            model.setColumnIdentifiers(columnsName);

            Object[] tableLines = buffReader.lines().toArray();

            jTable2.getSelectionModel().addSelectionInterval(0,0);

            for (Object tableLine : tableLines) {
                String line = tableLine.toString().trim();
                String[] dataRow = line.split(",");
                if(line.contains(librarianID)){
                    model.addRow(dataRow);

                }
            }
            buffReader.close();
        } catch (FileNotFoundException ex) {
           //
        } catch (IOException ex) {
            //
        } catch (Exception ex){
        //
        }
    }//GEN-LAST:event_staffSearchBtnActionPerformed

    private void logOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutActionPerformed
        dispose();
        new Login().setVisible(true);

    }//GEN-LAST:event_logOutActionPerformed

    private void createBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBtn1ActionPerformed
        String passwordStudent = studentPasswordTF.getText();
        DefaultTableModel modelAdjust = (DefaultTableModel)jTable1.getModel();
        Object passwordObj = modelAdjust.getValueAt(0, 4);
        String password = String.valueOf(passwordObj);
        password = passwordStudent;
        modelAdjust.setValueAt(password, 0, 4);
        // i use username help the system notice that which account's password should be updated
        // by getting username in THE SAME ROW with its password.
        // you can see the for-loop below
        Object usernameObj = modelAdjust.getValueAt(0,3);
        String username = String.valueOf(usernameObj);
        
        
        for(int i=0;i<=User.listOfAccounts.size();i++){
            if(User.listOfAccounts.get(i).getUsername().contains(username)){
                User.listOfAccounts.get(i).setPassword(password);
                break;
            }
        }
        
    }//GEN-LAST:event_createBtn1ActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        String filePath = "D:/LibraryManagementSystem/studentAccounts";
        File file = new File(filePath);

        String studentID= studentIDTF.getText();

        try{
            int getElement =0;

            DefaultTableModel modelElement = (DefaultTableModel)jTable1.getModel();
            getElement = jTable1.getSelectedRow();
            modelElement.removeRow(getElement);
        }catch(Exception io){

        }

        try {
            BufferedReader buffReader = new BufferedReader(new FileReader(filePath));
            String firstLine = buffReader.readLine().trim();
            String[] columnsName = firstLine.split(",");
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
            model.setColumnIdentifiers(columnsName);

            Object[] tableLines = buffReader.lines().toArray();

            jTable1.getSelectionModel().addSelectionInterval(0,0);

            for (Object tableLine : tableLines) {
                String line = tableLine.toString().trim();
                String[] dataRow = line.split(",");
                if(line.contains(studentID)){
                    model.addRow(dataRow);
                   

                }
            }
            buffReader.close();
        } catch (FileNotFoundException ex) {
            //
        } catch (IOException ex) {
            //
        } catch (Exception ex){
            //
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void createBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBtn2ActionPerformed
        String passwordLibrarian = librarianPasswordTF.getText();
        DefaultTableModel modelAdjust2 = (DefaultTableModel)jTable2.getModel();
        Object passwordObj = modelAdjust2.getValueAt(0, 4);
        String password = String.valueOf(passwordObj);
        password = passwordLibrarian;
        modelAdjust2.setValueAt(passwordLibrarian, 0, 4);
        
        Object usernameObj = modelAdjust2.getValueAt(0,3);
        String username = String.valueOf(usernameObj);
        
        
        for(int i=0;i<=User.listOfAccounts.size();i++){
            if(User.listOfAccounts.get(i).getUsername().contains(username)){
                User.listOfAccounts.get(i).setPassword(password);
                break;
            }
        }
        
    }//GEN-LAST:event_createBtn2ActionPerformed

    private void UpdateContentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateContentActionPerformed
       // update student information
        String filePath = "D:/LibraryManagementSystem/studentAccounts";
        File file = new File(filePath);
        try {
           FileReader fr = new FileReader(filePath);
           BufferedReader buffReader = new BufferedReader(fr);
           String firstLine = buffReader.readLine();
           
           fr.close();
           buffReader.close();
           
           BufferedWriter writer = new BufferedWriter(new FileWriter(filePath));
           writer.write(firstLine+"\n");
           
           for(int i=0;i<= User.listOfAccounts.size();i++) {
            if(User.listOfAccounts.get(i).getUserType().contains("Student")){
               writer.write(User.listOfAccounts.get(i).getStudentInfor());
               break;
               } 
            }
           writer.flush();
           writer.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(AdminGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex){
            //
        }
        // FINISHING UPDATING STUDENT
        
        // UPDATE LIBRARIAN INFORMATION
         String filePath2 = "D:/LibraryManagementSystem/librarianAccounts";
        File file2 = new File(filePath);
        try {
           FileReader fr2 = new FileReader(filePath2);
           BufferedReader buffReader2 = new BufferedReader(fr2);
           String firstLine2 = buffReader2.readLine();
           
           fr2.close();
           buffReader2.close();
           
           BufferedWriter writer2 = new BufferedWriter(new FileWriter(filePath2));
           writer2.write(firstLine2+"\n");
           
           for(int i=0;i<= User.listOfAccounts.size();i++) {
            if(User.listOfAccounts.get(i).getUserType().contains("Librarian")){
               writer2.write(User.listOfAccounts.get(i).getLibrarianInfor());
               break;
               } 
            }
           writer2.flush();
           writer2.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(AdminGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex){
            //
        }
        //FINISHING UPDATING
    }//GEN-LAST:event_UpdateContentActionPerformed

    private void deleteStudentAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteStudentAccountActionPerformed
        
        DefaultTableModel modelAdjust = (DefaultTableModel)jTable1.getModel();
        Object usernameObj = modelAdjust.getValueAt(0, 3);
        String username = String.valueOf(usernameObj);
        for(int i=0; i< User.listOfAccounts.size();i++){
            if(User.listOfAccounts.get(i).getUsername().contains(username)){
                User.listOfAccounts.remove(i);
            }
        }
    }//GEN-LAST:event_deleteStudentAccountActionPerformed

    private void deleteLibrarianAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteLibrarianAccountActionPerformed
        DefaultTableModel modelAdjust = (DefaultTableModel)jTable2.getModel();
        Object usernameObj = modelAdjust.getValueAt(0, 3);
        String username = String.valueOf(usernameObj);
        for(int i=0; i< User.listOfAccounts.size();i++){
            if(User.listOfAccounts.get(i).getUsername().contains(username)){
                User.listOfAccounts.remove(i);
            }
        }
    }//GEN-LAST:event_deleteLibrarianAccountActionPerformed

    private void CreateStudentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateStudentBtnActionPerformed
       dispose();
        new CreateStudentAccGUI().setVisible(true);
    }//GEN-LAST:event_CreateStudentBtnActionPerformed

    private void CreateLibrarianBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateLibrarianBtnActionPerformed
       dispose();
        new CreateLibrarianAccGUI().setVisible(true);
    }//GEN-LAST:event_CreateLibrarianBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CreateLibrarianBtn;
    private javax.swing.JButton CreateStudentBtn;
    private javax.swing.JButton UpdateContent;
    private javax.swing.JButton createBtn1;
    private javax.swing.JButton createBtn2;
    private javax.swing.JButton deleteLibrarianAccount;
    private javax.swing.JButton deleteStudentAccount;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField librarianPasswordTF;
    private javax.swing.JButton logOut;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField staffIDTF;
    private javax.swing.JButton staffSearchBtn;
    private javax.swing.JTextField studentIDTF;
    private javax.swing.JTextField studentPasswordTF;
    // End of variables declaration//GEN-END:variables
}
